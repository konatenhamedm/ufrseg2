<?php

namespace App\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

trait ModuleTreeBuilder
{
    public function buildNode($moduleName): TreeBuilder
    {
        $treeBuilder = new TreeBuilder($moduleName);
        $root = $treeBuilder->getRootNode();
      
        $root->children()
            ->scalarNode('name')->defaultValue($moduleName)->end()
            ->scalarNode('workflow_class')->defaultValue('')->end()
            ->scalarNode('as')->defaultValue('')->end()
            ->arrayNode('children')
                ->defaultValue([])
                ->arrayPrototype()
                    ->children()
                        ->scalarNode('discr')
                            ->isRequired()
                            ->cannotBeEmpty()
                        ->end()
                        ->scalarNode('label')
                            ->isRequired()
                            ->cannotBeEmpty()
                        ->end()
                        ->scalarNode('title')
                            ->defaultValue('')
                        ->end()
                    ->end()
                ->end()
            ->end()
            ->arrayNode('controllers')
                ->requiresAtLeastOneElement()
                ->arrayPrototype()
                    ->children()
                        ->arrayNode('children')
                            ->scalarPrototype()
                            ->end()
                        ->end()
                        ->arrayNode('only')
                            ->scalarPrototype()
                            ->end()
                        ->end()
                        ->scalarNode('name')
                            ->isRequired()
                            
                            ->cannotBeEmpty()
                        ->end()
                        ->scalarNode('title')
                            ->defaultValue('')
                        ->end()
                        ->scalarNode('alias')
                            ->defaultValue('')
                        ->end()
                        ->scalarNode('as')
                            ->defaultValue('')
                        ->end()
                        ->scalarNode('namespace')
                            ->defaultValue('')
                        ->end()
                        ->scalarNode('parent')
                            ->defaultValue('')
                        ->end()
                        ->arrayNode('methods')
                            ->scalarPrototype()
                            ->isRequired()
                            ->cannotBeEmpty()
                        ->end()
                       
                    ->end()
                ->end()
            ->end()   
        ->end()
        ->arrayNode('groups')
            ->defaultValue([])
            ->arrayPrototype()
                ->children()
                    ->scalarNode('label')
                        ->defaultValue('')
                    ->end()
                    ->scalarNode('role')
                        ->isRequired()
                        ->cannotBeEmpty()
                    ->end()
                    ->scalarNode('name')
                        ->isRequired()
                        ->cannotBeEmpty()
                    ->end()
                    ->scalarNode('alias')
                        ->isRequired()
                        ->cannotBeEmpty()
                    ->end()
                    ->scalarNode('controller')
                        ->isRequired()
                        ->cannotBeEmpty()
                    ->end()
                ->end()
            ->end()
        ->end()
        ->arrayNode('extras')
                ->arrayPrototype()
                    ->children()
                        ->scalarNode('name')
                            ->isRequired()
                            ->cannotBeEmpty()
                        ->end()
                        ->scalarNode('title')
                            ->defaultValue('')
                        ->end()
                        ->scalarNode('discr')
                            ->defaultValue('')
                        ->end()
                        ->arrayNode('methods')
                            ->scalarPrototype()
                            ->isRequired()
                            ->cannotBeEmpty()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ->end();

        return $treeBuilder;

    }
}